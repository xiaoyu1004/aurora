$date
	Mon Aug  7 18:28:58 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$scope module u_top $end
$var wire 1 ! clk $end
$var wire 1 " rst_n $end
$scope module u_cpu $end
$var wire 1 ! clk $end
$var wire 1 " rst_n $end
$var wire 32 # sext_out [31:0] $end
$var wire 32 $ rf_wr_data [31:0] $end
$var wire 1 % rf_we $end
$var wire 32 & rf_rd_data_1 [31:0] $end
$var wire 32 ' rf_rd_data_0 [31:0] $end
$var wire 32 ( pc [31:0] $end
$var wire 3 ) inst_type [2:0] $end
$var wire 32 * inst [31:0] $end
$var wire 1 + if_shift_imm_inst $end
$var wire 1 , if_load_inst $end
$var wire 1 - if_jal_inst $end
$var wire 1 . if_br_inst $end
$var wire 1 / flush_pc $end
$var wire 1 0 dram_wr_en $end
$var wire 32 1 dram_rd_data [31:0] $end
$var wire 32 2 alu_out [31:0] $end
$var wire 4 3 alu_op_type [3:0] $end
$scope module u_alu $end
$var wire 32 4 sext_out [31:0] $end
$var wire 32 5 rd_data_1 [31:0] $end
$var wire 32 6 rd_data_0 [31:0] $end
$var wire 3 7 inst_type [2:0] $end
$var wire 4 8 alu_op_type [3:0] $end
$var wire 32 9 alu_in1 [31:0] $end
$var wire 32 : alu_in0 [31:0] $end
$var reg 32 ; alu_out [31:0] $end
$upscope $end
$scope module u_ctrl $end
$var wire 1 0 dram_wr_en $end
$var wire 1 / flush_pc $end
$var wire 1 - if_jal_inst $end
$var wire 1 , if_load_inst $end
$var wire 1 + if_shift_imm_inst $end
$var wire 1 < inst_add $end
$var wire 1 = inst_addi $end
$var wire 1 > inst_and $end
$var wire 1 ? inst_andi $end
$var wire 1 @ inst_beq $end
$var wire 1 A inst_bge $end
$var wire 1 B inst_blt $end
$var wire 1 C inst_bne $end
$var wire 1 D inst_jalr $end
$var wire 1 E inst_lw $end
$var wire 1 F inst_or $end
$var wire 1 G inst_ori $end
$var wire 1 H inst_sll $end
$var wire 1 I inst_slli $end
$var wire 1 J inst_sra $end
$var wire 1 K inst_srai $end
$var wire 1 L inst_srl $end
$var wire 1 M inst_srli $end
$var wire 1 N inst_sub $end
$var wire 1 O inst_sw $end
$var wire 1 P inst_xor $end
$var wire 1 Q inst_xori $end
$var wire 1 % rf_we $end
$var wire 7 R opcode [6:0] $end
$var wire 1 S inst_lui $end
$var wire 1 T inst_jal $end
$var wire 32 U inst [31:0] $end
$var wire 1 . if_br_inst $end
$var wire 7 V funct7 [6:0] $end
$var wire 3 W funct3 [2:0] $end
$var reg 4 X alu_op_type [3:0] $end
$var reg 3 Y inst_type [2:0] $end
$upscope $end
$scope module u_d_dram $end
$var wire 1 ! clk $end
$var wire 32 Z rd_data [31:0] $end
$var wire 11 [ rw_addr [10:0] $end
$var wire 1 0 wr_en $end
$var wire 32 \ wr_data [31:0] $end
$upscope $end
$scope module u_d_irom $end
$var wire 11 ] addr [10:0] $end
$var wire 32 ^ inst [31:0] $end
$upscope $end
$scope module u_pc $end
$var wire 1 _ alu_out $end
$var wire 1 ` br_taken $end
$var wire 1 ! clk $end
$var wire 1 / flush_pc $end
$var wire 1 . if_br_inst $end
$var wire 1 - if_jal_inst $end
$var wire 32 a new_pc [31:0] $end
$var wire 1 " rst_n $end
$var wire 32 b sext_out [31:0] $end
$var wire 32 c offset [31:0] $end
$var reg 32 d pc [31:0] $end
$upscope $end
$scope module u_regfile $end
$var wire 1 ! clk $end
$var wire 5 e rd_addr_0 [4:0] $end
$var wire 5 f rd_addr_1 [4:0] $end
$var wire 1 " rst_n $end
$var wire 1 % we $end
$var wire 5 g wr_addr [4:0] $end
$var wire 32 h wr_data [31:0] $end
$var wire 32 i rd_data_1 [31:0] $end
$var wire 32 j rd_data_0 [31:0] $end
$var integer 32 k i [31:0] $end
$upscope $end
$scope module u_sext $end
$var wire 1 + if_shift_imm_inst $end
$var wire 25 l imm_in [24:0] $end
$var wire 3 m inst_type [2:0] $end
$var reg 32 n sext_out [31:0] $end
$upscope $end
$scope module u_writeback $end
$var wire 32 o alu_out [31:0] $end
$var wire 32 p dram_rd_data [31:0] $end
$var wire 1 / flush_pc $end
$var wire 1 , if_load_inst $end
$var wire 3 q inst_type [2:0] $end
$var wire 32 r pc [31:0] $end
$var reg 32 s rf_wr_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx s
b0 r
bx q
bx p
bx o
bx n
bx m
bx l
b100000 k
bx j
bx i
bx h
bx g
bx f
bx e
b0 d
bx c
bx b
bx a
x`
x_
bx ^
b0 ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
xT
xS
bx R
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
x0
x/
x.
x-
x,
x+
bx *
bx )
b0 (
bx '
bx &
x%
bx $
bx #
0"
0!
$end
#10000
b100000 k
1!
#20000
0!
#30000
b100000 k
1!
#40000
0!
0+
b0 $
b0 h
b0 s
b0 [
0_
0`
b0 2
b0 ;
b0 a
b0 o
1%
b100 c
b0 9
b0 :
0<
0N
0>
0F
1P
0H
0L
0J
0I
0M
0K
0=
0?
0G
0Q
0,
0E
0/
0D
00
0O
0@
0C
0B
0A
b100 3
b100 8
b100 X
0.
b0 )
b0 7
b0 Y
b0 m
b0 q
b0 #
b0 4
b0 b
b0 n
b0 &
b0 5
b0 \
b0 i
b0 '
b0 6
b0 j
b0 V
b100 W
0S
0-
0T
b110011 R
b10000000 l
b0 g
b0 f
b0 e
b100000000110011 *
b100000000110011 U
b100000000110011 ^
#50000
b100000 k
1!
#60000
0!
#70000
b100000 k
1!
#80000
0!
#90000
b100000 k
1!
#100000
0!
#110000
b100000 k
1!
#120000
0!
1"
#130000
b110 $
b110 h
b110 s
b1 [
b110 2
b110 ;
b110 a
b110 o
b110 9
0P
b0 3
b0 8
b0 X
b110 #
b110 4
b110 b
b110 n
1=
b1 )
b1 7
b1 Y
b1 m
b1 q
b0 W
b10011 R
b1100000000000000 l
b110 f
b11000000000000000010011 *
b11000000000000000010011 U
b11000000000000000010011 ^
b1 ]
b100 (
b100 d
b100 r
1!
#140000
0!
#150000
b0 $
b0 h
b0 s
b0 [
0_
b100 3
b100 8
b100 X
b0 2
b0 ;
b0 a
b0 o
1P
b0 9
0=
b0 )
b0 7
b0 Y
b0 m
b0 q
b0 #
b0 4
b0 b
b0 n
b100 W
b110011 R
b10000110000001 l
b1 g
b1 f
b1 e
b100001100000010110011 *
b100001100000010110011 U
b100001100000010110011 ^
b10 ]
b1000 (
b1000 d
b1000 r
1!
#160000
0!
#170000
b10 $
b10 h
b10 s
b10 2
b10 ;
b10 a
b10 o
b10 9
0P
b0 3
b0 8
b0 X
b10 #
b10 4
b10 b
b10 n
1=
b1 )
b1 7
b1 Y
b1 m
b1 q
b0 W
b10011 R
b100000100000001 l
b10 f
b1000001000000010010011 *
b1000001000000010010011 U
b1000001000000010010011 ^
b11 ]
b1100 (
b1100 d
b1100 r
1!
#180000
0!
#190000
0_
1<
b10 9
b10 $
b10 h
b10 s
b0 [
0=
b0 )
b0 7
b0 Y
b0 m
b0 q
b0 #
b0 4
b0 b
b0 n
b10 &
b10 5
b10 \
b10 i
b10 2
b10 ;
b10 a
b10 o
b110011 R
b10000000000000 l
b0 g
b1 f
b0 e
b0 :
b100000000000000110011 *
b100000000000000110011 U
b100000000000000110011 ^
b100 ]
b0 '
b0 6
b0 j
b10000 (
b10000 d
b10000 r
1!
#200000
0!
#210000
bx $
bx h
bx s
bx [
x_
bx 9
bx 2
bx ;
bx a
bx o
x+
b0x00 c
bx :
x<
xN
x>
xF
xP
xH
xL
xJ
xI
xM
xK
x=
x?
xG
xQ
x,
xE
x/
xD
x0
xO
x@
xC
xB
xA
x`
bx &
bx 5
bx \
bx i
bx '
bx 6
bx j
bx V
bx W
xS
x-
xT
bx R
bx l
bx g
bx f
bx e
bx *
bx U
bx ^
b101 ]
b10100 (
b10100 d
b10100 r
1!
#220000
0!
#230000
bx ]
bx (
bx d
bx r
1!
#240000
0!
#250000
1!
#260000
0!
#270000
1!
#280000
0!
#290000
1!
#300000
0!
#310000
1!
#320000
0!
#330000
1!
#340000
0!
#350000
1!
#360000
0!
#370000
1!
#380000
0!
#390000
1!
#400000
0!
#410000
1!
#420000
0!
#430000
1!
#440000
0!
#450000
1!
#460000
0!
#470000
1!
#480000
0!
#490000
1!
#500000
0!
#510000
1!
#520000
0!
#530000
1!
#540000
0!
#550000
1!
#560000
0!
#570000
1!
#580000
0!
#590000
1!
#600000
0!
#610000
1!
#620000
0!
#630000
1!
#640000
0!
#650000
1!
#660000
0!
#670000
1!
#680000
0!
#690000
1!
#700000
0!
#710000
1!
#720000
0!
#730000
1!
#740000
0!
#750000
1!
#760000
0!
#770000
1!
#780000
0!
#790000
1!
#800000
0!
#810000
1!
#820000
0!
#830000
1!
#840000
0!
#850000
1!
#860000
0!
#870000
1!
#880000
0!
#890000
1!
#900000
0!
#910000
1!
#920000
0!
#930000
1!
#940000
0!
#950000
1!
#960000
0!
#970000
1!
#980000
0!
#990000
1!
#1000000
0!
#1010000
1!
#1020000
0!
#1030000
1!
#1040000
0!
#1050000
1!
#1060000
0!
#1070000
1!
#1080000
0!
#1090000
1!
#1100000
0!
#1110000
1!
#1120000
0!
#1130000
1!
#1140000
0!
#1150000
1!
#1160000
0!
#1170000
1!
#1180000
0!
#1190000
1!
#1200000
0!
#1210000
1!
#1220000
0!
#1230000
1!
#1240000
0!
#1250000
1!
#1260000
0!
#1270000
1!
#1280000
0!
#1290000
1!
#1300000
0!
#1310000
1!
#1320000
0!
